
// This example shows how to use `ASNA.DataGateHelper's` `PagedData` class.
// [Download the ASNA.DataGateHelper here](https://github.com/ASNA/ASNA.DataGateHelper).

// This class reduces the effort of providing a basic paged list to less than 20 lines or so
// code. By manipulating the page number, you can easily page forwards and backwards through the file.

// Things to note:
//
// * Pages are derived by SQL with its LIMIT and OFFSET classes and the ORDER BY clause governs the arrival
//   sequence of the rows into the list and how pages are determined. 



Using System
Using System.Collections
Using System.Collections.Generic
Using System.Text
Using System.Text.RegularExpressions
Using ASNA.DataGateHelper


BegClass PagedDataClassExample

    // This code launches the example.
    BegSr Main Shared(*Yes) Access(*Public) Attributes(System.STAThread())
        DclSrParm args Type(*String) Rank(1)

        DclFld t Type(Test) New()

        t.Run()
    EndSr

EndClass


BegClass Test
    
    // The `CustomerPageModel` class defines the temporary work file the SQL creates. 
    // Declare a collection of `CustomerPageModel`. A `CustomerPageModel` instance
    // is created for each record read. 
    
    // Fetch three pages.
    BegSr Run Access(*Public) 
        DclFld PageNumber Type(*Integer4) 
        DclFld PageSize Type(*Integer4) 
        DclFld MoreRecords Type(*Boolean) 

        DclFld ConsoleInput Type(*String)

        DclFld Pager Type(PageCustomers) New() 
        //DclFld Pager Type(PageStates) New()

        Console.Write("Enter page size: ")
        ConsoleInput = Console.ReadLine() 
        PageSize = Convert.ToInt32(ConsoleInput) 
    
        PageNumber = 0

        DoWhile *True 
            Console.Write("Enter page number (or press enter for next page): ")

            ConsoleInput = Console.ReadLine() 
            If NOT String.IsNullOrEmpty(ConsoleInput) AND ConsoleInput.ToLower().Trim().Substring(0,1) = 'q'
                LeaveSr 
            EndIf  

            If String.IsNullOrEmpty(ConsoleInput) 
                ConsoleInput = (PageNumber + 1).ToString()
            EndIf 

            If NOT Regex.IsMatch(ConsoleInput, "^\d+$")
                Console.WriteLine("Please enter a number") 
                Iterate
            EndIf 

            PageNumber = Convert.ToInt32(ConsoleInput) 

            MoreRecords = Pager.GetPage(PageNumber, PageSize) 
            If MoreRecords 
                Console.WriteLine('More pages to show...')
            Else
                Console.WriteLine('No more pages to show.')
            EndIf
        EndDo 

        pager.Close() 
    EndSr
EndClass
